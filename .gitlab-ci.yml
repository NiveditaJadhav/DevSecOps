stages:
  - test

# SonarCloud Job
sonarcloud-check:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]  # Clear the default entrypoint
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache  # Cache for SonarCloud analysis
  script:
    - sonar-scanner  # Run SonarCloud scanner
  only:
    - merge_requests
    - master
    - main

# ZAP Dynamic Security Test Job
# Use OpenJDK 17 as the base image
image: openjdk:17-slim

# Define caching for dependencies to speed up subsequent builds
cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .m2/repository/    # For Maven dependencies
    - build/             # Gradle build cache (if using Gradle)

# Define stages in the pipeline
stages:
  - init                # Initial setup
  - build               # Build the application
  - test                # Run tests
  - package             # Package the application

# Initial setup (e.g., update packages)
init:
  stage: init
  script:
    - apt-get update && apt-get install -y curl git
  tags:
    - docker

# Build stage: compile the Java code
build:
  stage: build
  script:
    # Example for Maven
    - mvn clean compile
  only:
    - main               # Run this only on the main branch

# Test stage: run unit tests
test:
  stage: test
  script:
    # Example for Maven
    - mvn test
  artifacts:
    paths:
      - target/surefire-reports/ # Save test reports
  only:
    - merge_requests             # Run tests only on merge requests

# Package stage: create a JAR or WAR file
package:
  stage: package
  script:
    # Package the application
    - mvn package
  artifacts:
    paths:
      - target/*.jar             # Save the generated JAR/WAR file
  only:
    - tags                       # Run this only on Git tags

# Additional job to deploy artifacts (optional)
deploy:
  stage: deploy
  script:
    - echo "Deploying application..."
    - scp target/*.jar user@server:/path/to/deployment/
  only:
    - tags




